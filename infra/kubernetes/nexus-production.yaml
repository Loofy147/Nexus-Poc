apiVersion: v1
kind: Namespace
metadata:
  name: nexus-production
  labels:
    istio-injection: enabled
    monitoring: enabled

---
# ConfigMap for environment variables
apiVersion: v1
kind: ConfigMap
metadata:
  name: nexus-config
  namespace: nexus-production
data:
  ENVIRONMENT: "production"
  LOG_LEVEL: "info"
  PROMETHEUS_URL: "http://prometheus.nexus-observability.svc.cluster.local:9090"
  JAEGER_ENDPOINT: "http://jaeger-collector.nexus-observability.svc.cluster.local:14268/api/traces"
  NEO4J_URI: "bolt://neo4j.nexus-data.svc.cluster.local:7687"
  REDIS_URL: "redis://redis.nexus-data.svc.cluster.local:6379"

---
# Secret for sensitive data (to be created manually)
apiVersion: v1
kind: Secret
metadata:
  name: nexus-secrets
  namespace: nexus-production
type: Opaque
data:
  # These values are populated by running the ./create-secrets.sh script.
  # Do not commit sensitive data to this file.
  OPENAI_API_KEY: ""
  NEO4J_PASSWORD: ""

---
# Service for Meta-Controller
apiVersion: v1
kind: Service
metadata:
  name: meta-controller
  namespace: nexus-production
  labels:
    app: nexus
    component: meta-controller
spec:
  type: ClusterIP
  selector:
    app: nexus
    component: meta-controller
  ports:
  - name: http
    port: 6000
    targetPort: 6000
  - name: metrics
    port: 9090
    targetPort: 9090

---
# VirtualService for Istio traffic management
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: meta-controller
  namespace: nexus-production
spec:
  hosts:
  - meta-controller.nexus-production.svc.cluster.local
  http:
  - route:
    - destination:
        host: meta-controller
        subset: stable
      weight: 100
    timeout: 30s
    retries:
      attempts: 3
      perTryTimeout: 10s
      retryOn: 5xx,reset,connect-failure,refused-stream

---
# DestinationRule for traffic policies
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: meta-controller
  namespace: nexus-production
spec:
  host: meta-controller
  trafficPolicy:
    connectionPool:
      tcp:
        maxConnections: 1000
      http:
        http1MaxPendingRequests: 100
    outlierDetection:
      consecutiveErrors: 5
      interval: 30s
      baseEjectionTime: 30s
  subsets:
  - name: stable
    labels:
      version: v2.0.0
  - name: canary
    labels:
      version: v2.1.0 # For future canary deployments

# NetworkPolicy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: meta-controller-netpol
  namespace: nexus-production
spec:
  podSelector:
    matchLabels:
      app: nexus
      component: meta-controller
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    # Allow traffic from other pods in the same namespace (e.g., from an ingress gateway)
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 6000
  egress:
  # Allow egress to other NEXUS services and the observability stack
  - to:
    - namespaceSelector:
        matchLabels:
          name: nexus-production
    - namespaceSelector:
        matchLabels:
          name: nexus-observability
    - namespaceSelector:
        matchLabels:
          name: nexus-data
  # Allow egress for DNS
  - ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53